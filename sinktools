#!/bin/bash


args=("$@")
argsLength=${#args[@]}


getVolume=$(pactl get-sink-volume $(pactl get-default-sink))
currentSink=$(pactl get-default-sink)
sinksString=$(pactl list sinks | grep Name:)
sinksString=$(sed 's/Name: //' <<< $sinksString)
sinksArray=($sinksString)


get-volume-percent () {

    rmBeg=$(sed 's/Volume: front-left: [0-9]* \/[ \t]*//' <<< $getVolume)
    percent=$(sed 's/ .*//' <<< $rmBeg)
    echo $percent
}


set-volume () {

    upString="+5%"
    downString="-5%"

    setVolume="pactl set-sink-volume"
    
    if [[ $argsLength -lt 2 ]]
    then
        echo "Usage: sinktools -set-volume -up|-down"
        exit 1
    fi
    if [[ ${args[1]} == "-up" ]]
    then
	if [[ $(check-if-max-volume) == 1 ]] 
	then
	    $setVolume $(pactl get-default-sink) 100%
        else
	    $setVolume $(pactl get-default-sink) $upString
	fi
    elif [[ ${args[1]} == "-down" ]]
    then
        $setVolume $(pactl get-default-sink) $downString
    else
        echo "Usage: sinktools -set-volume -up|-down"
        exit 1
    fi
}


check-if-max-volume () {

    vol=$(get-volume-percent)
    volInt=$(sed 's/%//' <<< $vol)
    nextVol=$((volInt + 5))

    if [[ $nextVol -ge 100 ]]
    then
	echo 1
    else
	echo 0
    fi
}


change-sink () {

    if [[ $argsLength -gt 1 ]]
    then
        if [[ ${args[1]} == "-m" ]]
        then
            change-sink-menu
        else
            echo "Usage: sinktools -change-sink (-m)"
            exit 1
        fi
    else
        next-sink
    fi
}


next-sink () {

    length=${#sinksArray[@]}

    i=0
    while [[ $i < $length ]]
    do
        if [[ $currentSink == ${sinksArray[$i]} ]]
        then
            if [[ $i == $(( $length - 1 )) ]]
            then
                pactl set-default-sink ${sinksArray[0]}
            else
                pactl set-default-sink ${sinksArray[$i + 1]}
            fi
        pactl get-default-sink
        fi
        i=$(( $i + 1 ))
    done
}

change-sink-menu () {

    pactl set-default-sink $(pactl list sinks | 
        grep Name: | 
        sed 's/Name: //' | 
        sed 's/^[ \t]*//' | 
        rofi -dmenu -window-title 'Audio Sink')

        pactl get-default-sink
}


# check if user gave arguments
if [[ $argsLength -lt 1 ]]
then
    echo "sinktools needs arguments"
    exit 1
fi

if [[ ${args[0]} == "-change-sink" ]]
then
    change-sink
    exit 0
fi

if [[ ${args[0]} == "-get-volume" ]]
then
    get-volume-percent
    exit 0
fi

if [[ ${args[0]} == "-set-volume" ]]
then
    set-volume
    exit 0
fi

echo "Parameters: -change-sink | -get-volume | -set-volume"
